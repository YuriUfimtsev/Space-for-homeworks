#pragma once

#include <stdbool.h>

typedef struct List List;

typedef struct Position Position;

// Функция создает список - возвращает указатель на структуру ListElement - начало списка.
List* createList();

// Функция удаляет список. Принимает на вход указатель на голову списка (на структуру ListElement).
// Ничего не возвращает.
void deleteList(List* list);

// Функция удаляет элемент в списке. 
// Принимает на вход указатель на элемент списка (указатель на указатель на структуру ListElement).
// Ничего не возвращает.
void deletePosition(Position* position);

// Функция добавляет элемент со значением value в конец списка.
// Принимает на вход указатель на голову списка.
// Ничего не возвращает.
void add(List* list, int value);

// Функция добавляет элемент со значением value в список (после элемента с указателем position).
// Функция принимает на вход указатель на голову списка, указатель на элемент, 
// после которого нужно добавить новый элемент в список, значение value, которое нужно добавить в список.
// Функция ничего не возвращает.
void addByPosition(List* list, Position* position, int value);

// Функция возвращает указатель на первый элемент списка. Принимает указатель на голову списка.
Position* first(List* list);

// Функция возвращает указатель на следующий элемент списка. Принимает указатель на текущий элемент списка.
Position* next(Position* position);

// Функция возвращает true, если передаваемое значение 
// - указатель на элемент списка - является указателем на последний элемент списка.
// false - если передаваемое значение - указатель на элемент списка - не является указателем на последний элемент списка.
bool last(Position* position, List* list);

// Функция возвращает значение value, лежащее в данном элементе списка. 
// Функция принимает указатель на голову списка и указатель на элемент списка.
int getValue(List* list, Position* position);

// Функция проверяет, есть ли в списке элемент с данным значением value.
// Функция принимает указатель на голову списка и значение value. 
// Возвращает true, если элемент с таким значением присутсвует в списке. 
// Возвращает false, если элемент с таким значением отсутствует в списке.
bool valueInList(List* list, int value);

// Функция вычисляет размер списка (количество элементов).
// Принимает на вход указатель на голову списка.
// Возвращает размер списка.
int sizeOfList(List* list);

// Функция удаляет элемент со значением value из списка. 
// Функция принимает указатель на голову списка и значение value, которое надо убрать из списка.
// Функция возвращает true, если элемент со значением value удален.
// Функция возвращает false, если элемента со значением value в списке нет.
bool delete(List* list, int value);